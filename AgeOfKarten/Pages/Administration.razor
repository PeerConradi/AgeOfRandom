@inject Data.MainService mainService;
@page "/admin"

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Create Nation</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label>Name</label>
                    <input class="form-control" @bind="newNationName" />
                    <button class="btn btn-block btn-success" @onclick="CreateNation">Add Nation</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Create Card</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label>Card-Name</label>
                    <input class="form-control" @bind="newCardName" />
                </div>

                <div class="form-group">
                    <label>Image Name</label>
                    @if (imageNames != null)
                    {
                        <select class="form-control" @bind="newCardImageName">
                            @foreach (var imgName in imageNames)
                            {
                                <option value="@imgName">@imgName</option>
                            }
                        </select>
                    }
                </div>

                <div class="form-group">
                    <button class="btn btn-success btn-block" @onclick="CreateCard">Create Card</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Map Cards and Nations</h3>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label>Select Nation</label>
                    <select class="form-control" @bind="selectedNationId">
                        <option value="-1" disabled>Choose Nation</option>
                        @foreach (var nation in nations)
                        {
                            <option value="@nation.NationId">@nation.Name</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Select Card</label>
                    <select class="form-control" @bind="selectedCardId">
                        <option value="-1" disabled>Choose Card</option>
                        @foreach (var card in cards)
                        {
                            <option value="@card.CardId">@card.Name</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Select Age</label>
                    <select class="form-control" @bind="selectedAge">
                        <option value="0">I: Exploration Age</option>
                        <option value="1">II: Commerce Age</option>
                        <option value="2">III: Fortress Age</option>
                        <option value="3">IV: Industrial Age</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Propability</label>
                    <input type="number" class="form-control" @bind="propability" />
                </div>

                <div class="form-group">
                    <button class="btn btn-success btn-block" @onclick="AssignCardToNation">Assign Card to Nation</button>
                </div>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger">@errorMessage</div>
                }

            </div>
        </div>
    </div>
</div>

@code {
    private string newNationName { get; set; }

    private string newCardName { get; set; }

    private string newCardImageName { get; set; }

    private int selectedCardId { get; set; } = -1;

    private int selectedNationId { get; set; } = -1;

    private int propability { get; set; } = 10;

    private int selectedAge { get; set; } = 0;

    private List<Models.Nation> nations = new List<Models.Nation>();

    private List<Models.Card> cards = new List<Models.Card>();

    private List<string> imageNames { get; set; }

    private string errorMessage { get; set; }

    private void CreateNation()
    {
        if (!string.IsNullOrEmpty(newNationName))
        {
            var newNation = mainService.CreateNation(newNationName);
            nations.Add(newNation);
            newNationName = "";
        }
    }

    private void CreateCard()
    {
        if(!string.IsNullOrEmpty(newCardName) && !string.IsNullOrEmpty(newCardImageName))
        {
            var newCard = mainService.CreateCard(newCardName, newCardImageName);
            if (newCard != null)
            {
                cards.Add(newCard);
                newCardName = "";
            }
        }
    }

    private void AssignCardToNation()
    {
        if (selectedNationId != -1 && selectedCardId != -1)
        {

            mainService.AssignCardToNation(selectedCardId, selectedNationId, selectedAge, propability);
        }
        else
        {
            errorMessage = $"NationId: {selectedNationId} CardId: {selectedCardId} non of this values can be zero!";
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        nations = mainService.GetNations();
        cards = mainService.GetCards();
        imageNames = mainService.GetImageNames();
        newCardImageName = imageNames.FirstOrDefault();
    }
}
